# to access a container from another one, use container name as host

services:
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: always
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /apps/sonarr:/config
      - /data/media:/data
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: always
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /apps/radarr:/config
      - /data/media:/data
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: always
    ports:
      - 9696:9696
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /apps/prowlarr:/config
  qbittorrent:
    # after first launch, use temporary admin password and change them.
    # To see the temporary password, see the logs:
    #   podman logs qbittorrent
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: always
    ports:
      - 8080:8080
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - /data/media/downloads:/downloads
      - /apps/qbittorrent:/config
  jackett:
    container_name: jackett
    image: lscr.io/linuxserver/jackett:latest
    restart: always
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /data/media/downloads:/downloads
      - /apps/jackett:/config
  monitorrent:
    # default password is monitorrent
    container_name: monitorrent
    image: docker.io/werwolfby/monitorrent:latest
    restart: always
    ports:
      - 6687:6687
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /apps/monitorrent/monitorrent.db:/var/www/monitorrent/monitorrent.db
  jellyfin:
    # look at https://hub.docker.com/r/linuxserver/jellyfin for hardware acceleration
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    restart: always
    ports:
      - 8096:8096
      - 7359:7359/udp # allows clients to discover Jellyfin on the local network.
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=${LOCALNETIP} # ip returned to client when discovered
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /apps/jellyfin:/config
      - /data/media/shows:/data/tvshows
      - /data/media/movies:/data/movies
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:latest"
    restart: always
    ports:
      - 8123:8123
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /apps/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
